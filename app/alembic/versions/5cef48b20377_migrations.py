"""migrations

Revision ID: 5cef48b20377
Revises: 
Create Date: 2024-06-12 18:44:40.904735

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic_utils.pg_function import PGFunction
from sqlalchemy import text as sql_text

# revision identifiers, used by Alembic.
revision: str = '5cef48b20377'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('creators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_creators_id'), 'creators', ['id'], unique=False)
    op.create_table('directors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site', sa.Enum('MYANIMELIST', '_1MDB', name='host'), nullable=False),
    sa.Column('type', sa.Enum('GENRE', 'STATUS', 'SHOW_TYPE', 'PREMIER', 'RATED', name='enumstype'), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enums_id'), 'enums', ['id'], unique=False)
    op.create_index(op.f('ix_enums_value'), 'enums', ['value'], unique=False)
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_index(op.f('ix_groups_name'), 'groups', ['name'], unique=True)
    op.create_table('languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('licensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_licensors_id'), 'licensors', ['id'], unique=False)
    op.create_table('networks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_networks_id'), 'networks', ['id'], unique=False)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('details', sa.JSON(), nullable=False),
    sa.Column('parentPermissionID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parentPermissionID'], ['permissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_table('premiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('producers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_producers_id'), 'producers', ['id'], unique=False)
    op.create_table('productions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_productions_id'), 'productions', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('stars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('studios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_studios_id'), 'studios', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('animes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('myanimelist_id', sa.Integer(), nullable=True),
    sa.Column('title_ov', sa.String(), nullable=False),
    sa.Column('title_en', sa.String(), nullable=True),
    sa.Column('synopsis', sa.String(), nullable=True),
    sa.Column('picture_url', sa.String(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('premier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['premier_id'], ['premiers.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['enums.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('myanimelist_id'),
    sa.UniqueConstraint('title_ov')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('change_type', sa.String(length=50), nullable=True),
    sa.Column('change_details', sa.JSON(), nullable=True),
    sa.Column('changed_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('movies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('imdb_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('tagline', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('imdb_rating', sa.Float(), nullable=True),
    sa.Column('vote_count_number', sa.Integer(), nullable=True),
    sa.Column('popularity', sa.Float(), nullable=True),
    sa.Column('youtube_trailer_key', sa.String(), nullable=True),
    sa.Column('runtime', sa.Integer(), nullable=True),
    sa.Column('rated_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rated_id'], ['enums.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], )
    )
    op.create_table('series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('imdb_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('year_started', sa.Integer(), nullable=True),
    sa.Column('release_date', sa.String(), nullable=True),
    sa.Column('imdb_rating', sa.Float(), nullable=True),
    sa.Column('vote_count', sa.Integer(), nullable=True),
    sa.Column('popularity', sa.Float(), nullable=True),
    sa.Column('youtube_trailer_key', sa.String(), nullable=True),
    sa.Column('runtime', sa.Integer(), nullable=True),
    sa.Column('rated_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['rated_id'], ['enums.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('user_groups',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('user_permissions',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('alternative_titles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('synonym', sa.String(), nullable=True),
    sa.Column('japanese', sa.String(), nullable=True),
    sa.Column('anime_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alternative_titles_id'), 'alternative_titles', ['id'], unique=False)
    op.create_table('anime_demographics',
    sa.Column('anime_id', sa.Integer(), nullable=False),
    sa.Column('demographic_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['demographic_id'], ['enums.id'], ),
    sa.PrimaryKeyConstraint('anime_id', 'demographic_id')
    )
    op.create_table('anime_genres',
    sa.Column('anime_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['enums.id'], ),
    sa.PrimaryKeyConstraint('anime_id', 'genre_id')
    )
    op.create_table('anime_licensors',
    sa.Column('anime_id', sa.Integer(), nullable=False),
    sa.Column('licensor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['licensor_id'], ['licensors.id'], ),
    sa.PrimaryKeyConstraint('anime_id', 'licensor_id')
    )
    op.create_table('anime_producers',
    sa.Column('anime_id', sa.Integer(), nullable=False),
    sa.Column('producer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['producer_id'], ['producers.id'], ),
    sa.PrimaryKeyConstraint('anime_id', 'producer_id')
    )
    op.create_table('anime_studios',
    sa.Column('anime_id', sa.Integer(), nullable=False),
    sa.Column('studio_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['studio_id'], ['studios.id'], ),
    sa.PrimaryKeyConstraint('anime_id', 'studio_id')
    )
    op.create_table('informations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('episode', sa.Integer(), nullable=True),
    sa.Column('aired', sa.String(), nullable=True),
    sa.Column('broadcast', sa.String(), nullable=True),
    sa.Column('anime_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['anime_id'], ['animes.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['enums.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_informations_id'), 'informations', ['id'], unique=False)
    op.create_table('movie_countries',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'country_id')
    )
    op.create_table('movie_directors',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('director_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['director_id'], ['directors.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'director_id')
    )
    op.create_table('movie_genres',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['enums.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'genre_id')
    )
    op.create_table('movie_languages',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'language_id')
    )
    op.create_table('movie_stars',
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('star_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.ForeignKeyConstraint(['star_id'], ['stars.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'star_id')
    )
    op.create_table('series_countries',
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.PrimaryKeyConstraint('series_id', 'country_id')
    )
    op.create_table('series_creators',
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['creators.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.PrimaryKeyConstraint('series_id', 'creator_id')
    )
    op.create_table('series_genres',
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['enums.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.PrimaryKeyConstraint('series_id', 'genre_id')
    )
    op.create_table('series_languages',
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.PrimaryKeyConstraint('series_id', 'language_id')
    )
    op.create_table('series_networks',
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('network_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['network_id'], ['networks.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.PrimaryKeyConstraint('series_id', 'network_id')
    )
    op.create_table('series_production_companies',
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('production_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['production_id'], ['productions.id'], ),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.PrimaryKeyConstraint('series_id', 'production_id')
    )
    op.create_table('series_stars',
    sa.Column('series_id', sa.Integer(), nullable=False),
    sa.Column('star_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['series_id'], ['series.id'], ),
    sa.ForeignKeyConstraint(['star_id'], ['stars.id'], ),
    sa.PrimaryKeyConstraint('series_id', 'star_id')
    )
    public_to_upper = PGFunction(
        schema="public",
        signature="to_upper(some_text text)",
        definition='RETURNS text as\n  $$\n    SELECT upper(some_text)\n  $$ language SQL'
    )
    op.create_entity(public_to_upper)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    public_to_upper = PGFunction(
        schema="public",
        signature="to_upper(some_text text)",
        definition='RETURNS text as\n  $$\n    SELECT upper(some_text)\n  $$ language SQL'
    )
    op.drop_entity(public_to_upper)

    op.drop_table('series_stars')
    op.drop_table('series_production_companies')
    op.drop_table('series_networks')
    op.drop_table('series_languages')
    op.drop_table('series_genres')
    op.drop_table('series_creators')
    op.drop_table('series_countries')
    op.drop_table('movie_stars')
    op.drop_table('movie_languages')
    op.drop_table('movie_genres')
    op.drop_table('movie_directors')
    op.drop_table('movie_countries')
    op.drop_index(op.f('ix_informations_id'), table_name='informations')
    op.drop_table('informations')
    op.drop_table('anime_studios')
    op.drop_table('anime_producers')
    op.drop_table('anime_licensors')
    op.drop_table('anime_genres')
    op.drop_table('anime_demographics')
    op.drop_index(op.f('ix_alternative_titles_id'), table_name='alternative_titles')
    op.drop_table('alternative_titles')
    op.drop_table('user_roles')
    op.drop_table('user_permissions')
    op.drop_table('user_groups')
    op.drop_table('series')
    op.drop_table('role_permissions')
    op.drop_table('movies')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('animes')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_studios_id'), table_name='studios')
    op.drop_table('studios')
    op.drop_table('stars')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_productions_id'), table_name='productions')
    op.drop_table('productions')
    op.drop_index(op.f('ix_producers_id'), table_name='producers')
    op.drop_table('producers')
    op.drop_table('premiers')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_networks_id'), table_name='networks')
    op.drop_table('networks')
    op.drop_index(op.f('ix_licensors_id'), table_name='licensors')
    op.drop_table('licensors')
    op.drop_table('languages')
    op.drop_index(op.f('ix_groups_name'), table_name='groups')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_enums_value'), table_name='enums')
    op.drop_index(op.f('ix_enums_id'), table_name='enums')
    op.drop_table('enums')
    op.drop_table('directors')
    op.drop_index(op.f('ix_creators_id'), table_name='creators')
    op.drop_table('creators')
    op.drop_table('countries')
    # ### end Alembic commands ###
